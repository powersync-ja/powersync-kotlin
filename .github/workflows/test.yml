name: Gradle build & test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_call:

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-latest
            name: macos-watchos-tvos
            targets: watchosSimulatorArm64Test tvosSimulatorArm64Test
          - os: macos-latest
            name: mac-ios-macos
            targets: iosSimulatorArm64Test macosArm64Test
          - os: macos-latest
            name: mac-jvm
            targets: jvmTest
          - os: ubuntu-latest
            name: ubuntu
            targets: testDebugUnitTest testReleaseUnitTest jvmTest lintKotlin
          - os: windows-latest
            name: windows
            targets: jvmTest
    runs-on: ${{ matrix.os }}
    name: Test ${{ matrix.name }}
    timeout-minutes: 20

    steps:
    - uses: actions/checkout@v4
    - name: Validate Gradle Wrapper
      uses: gradle/actions/wrapper-validation@v4
    - uses: actions/cache@v4
      with:
        path: ~/.konan
        key: ${{ runner.os }}-${{ hashFiles('**/.lock') }}
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Set up Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

    - name: Set up XCode
      if: runner.os == 'macOS'
      uses: maxim-lobanov/setup-xcode@v1
      with:
        # TODO: Update to latest-stable once GH installs iOS 26 simulators
        xcode-version: '^16.4.0'

    - name: Build and run tests with Gradle
      run: |
        ./gradlew --scan \
          ${{ matrix.targets }}
      shell: bash

    # Credit: https://github.com/gradle/actions/issues/76#issuecomment-2007584323
    - name: Upload reports on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: report-for-${{ matrix.name }}
        path: |
          **/build/reports/
          **/build/test-results/

  android_emulator:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      AVD_NAME: ubuntu-avd-x86_64-31
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4
      - uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-${{ hashFiles('**/.lock') }}
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
      - name: AVD Cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-31

      # https://github.com/ReactiveCircus/android-emulator-runner?tab=readme-ov-file#usage--examples
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: emulator tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 31
          force-avd-creation: false
          target: google_apis
          arch: x86_64
          disable-animations: false
          avd-name: $AVD_NAME
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: ./gradlew --scan core-tests-android:connectedCheck
